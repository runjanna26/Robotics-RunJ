/*
 * ekf.h
 *
 *  Created on: Jun 3, 2024
 *      Author: WINDOWS 11
 */

#ifndef LIBS_EKF_H_
#define LIBS_EKF_H_

// Define your own _float_t if not defined
#ifndef _float_t
#define _float_t float
#endif

// EKF parameters
#define EKF_N 2  // State vector dimension
#define EKF_M 1  // Measurement vector dimension

class ekf {
public:
	ekf();
	virtual ~ekf();

	void initializeEKF();
	void ekfPredict();
	void ekfUpdate(float z);
private:
	typedef struct
	{
	    float x[EKF_N];        // State vector
	    float P[EKF_N*EKF_N];  // Prediction error covariance
	} ekf_t;

	// === tuning only Q and R matrix ===
	const float Q[EKF_N*EKF_N] =
	{
	    1e-5, 0,
	    0, 1e-5
	};

	const float R[EKF_M*EKF_M] =
	{
	    1e-2
	};
	// ==================================

	const float F[EKF_N*EKF_N] =
	{
	    1, 0.01,
	    0, 1
	};

	const float H[EKF_M*EKF_N] =
	{
	    1, 0
	};
};

#endif /* LIBS_EKF_H_ */
